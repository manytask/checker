[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "manytask-checker"
authors = [
    {name = "Konstantin Chernyshev", email = "kdchernyshev@gmail.com"},
]
description = "Students' solution checker"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Typing :: Typed",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Education :: Testing",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "PyYAML >=5.0.0,<7.0.0",
    "click >=8.0,<9.0",
    "python-gitlab >=3.0.0,<4.0.0",
    "requests >=2.20.0,<3.0.0",
    "unshare >=0.22,<0.30; sys_platform != 'darwin'",
]
dynamic = ["version"]

[project.urls]
Source = "https://github.com/yandexdataschool/checker"

[project.optional-dependencies]
test = [
    "pytest >=6.0.0,<8.0.0",
    "pytest-cov >=4.0.0,<5.0.0",
    "pytest-mock >=3.0.0,<4.0.0",
    "black ==23.7.0",
    "mypy >=1.0.0",
    "flake8 >=4.0.0,<5.0.0",
    "isort >=5.0.0,<7.0.0",
    "ruff ==0.1.3",
    "types-requests >=2.20.0,<3.0.0",
    "types-PyYAML >=6.0.0,<7.0.0",
    "wheel >=0.40.0",
]

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[project.scripts]
checker = "checker.__main__:main"

[tool.setuptools.packages.find]
exclude = ["tests*"]


# --------------------------------------------------------------------------- #


[tool.mypy]
no_incremental = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
allow_untyped_decorators = true
exclude = [
    "tests/",
    ".tmp/",
    ".venv/"
]


[tool.pyright]
include = ["checker"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    ".venv",
    "venv",
    ".tmp",
    "tests"
]


[tool.pytest.ini_options]
minversion = "6.0"
python_files = "test_*.py"
addopts = "--cov=checker/ --cov-report=term-missing tests/"
testpaths = [
    "tests",
    ".tmp"
]


[tool.ruff]
target-version = "py311"

# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",

    "tests",
    ".tmp"
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

line-length = 120


[tool.isort]
profile = "black"
line_length = 120
lines_after_imports = 2
combine_as_imports = true
default_section = "THIRDPARTY"
known_first_party = "checker,tests"
