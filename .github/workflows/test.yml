name: Lint and Test

on:
  push:
    branches: [ main, new-1.x.x ]
  pull_request:
    branches: [ main, new-1.x.x ]


concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name | github.ref }}
  cancel-in-progress: true


env:
  PYTHON_VERSIONS: ['3.8', '3.9', '3.10', '3.11', '3.12']


jobs:
  package-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSIONS }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install -e .[test]
      - name: Run linters
        run: make lint

  package-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSIONS }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install -e .[test]
      - name: Run all tests
        run: make test
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # not required for public repos
          files: coverage.xml
          flags: unittests  # optional
          fail_ci_if_error: true  # optional (default = false)
          verbose: true  # optional (default = false)

  package-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSIONS }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install wheel
      - name: Build wheel
        run: |
          # TODO: replace with make build
          python -m pip wheel . --no-deps --wheel-dir dist
  
  docs-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install -e .[docs]
      - name: TODO
        run: |
          echo "TODO: add docs tests"

  docs-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install -e .[docs]
      - name: TODO
        run: |
          echo "TODO: add docs preview"
