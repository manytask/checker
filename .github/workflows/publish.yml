name: Publish


on:
  release:
    types:
      - released


concurrency:
  group: ${{ github.workflow }}-${{ github.event.release.id }}
  cancel-in-progress: false


jobs:
  update-version-changelog:
    uses: manytask/.github/.github/workflows/reusable-update-changelog-version.yml@main
    permissions:
      contents: write
    with:
      release_tag: ${{ github.event.release.tag_name }}
      release_target: ${{ github.event.release.target_commitish }}
      release_body: ${{ github.event.release.body }}
      release_url: ${{ github.event.release.html_url }}
    secrets:
      token: ${{ secrets.MANYTASK_SERVICE_PUSH_TOKEN }}

  release-python-package:
    needs: update-version-changelog
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/manytask-checker
    permissions:
      deployments: write
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: 'pip' # caching pip dependencies
    - name: Install requirements for package build
      run: |
        python -m pip install -U wheel twine
    - name: Build python package
      run: |
        echo -n "${{github.ref_name}}" > VERSION
        python -m pip wheel . --no-deps --wheel-dir dist
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  release-github-pages:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install -e .[docs]
      - name: Setup doc deploy
        run: |
          git config --global user.name Docs deploy
          git config --global user.email docs@dummy.bot.com
      - name: Docs deploy
        run: |
          echo -n "${{github.ref_name}}" > VERSION
          make docs-deploy

  release-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Build docker image
        run: |
          docker build --build-arg PYTHON_VERSION=${{ matrix.python-version }} -t manytask-checker:${{ github.sha }} .
      - name: Test run --help in docker image
        run: |
            docker run --rm manytask-checker:${{ github.sha }} --help
